<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<div class="container bs-docs-container">
	<div class="row">
		<div class="col-md-2">
		</div>
		<div class="col-md-10" Role="main">
			<h1 id="root" class="page-header">io:Box <small>Asset Management System</small></h1>
			<p class="lead">강력하고 안전하게 사내의 문서 파일을 사용하는 방법, io:Box는 회사에서 요구하는 안전한 파일의 공유를 지원합니다.</p>
			
			<h3 id="assetmanagement">Asset Management <small>형상관리/形狀管理</small></h3>
			<p>
			시스템 형상 요소의 기능적 특성이나 물리적 특성을 문서화하고 그들 특성의 변경을 관리하며, 변경의 과정이나 실현 상황을 기록·보고하여 지정된 요건이 충족되었다는 사실을 검증하는 것, 또는 그 과정을 말합니다.<br />
			<br />
			업체에서의 컴퓨터 사용이 늘고 거의 대부분의 문서가 MS Word, Excel, Power point, HWP, PDF 등으로 작성되어 보관되고 있기 때문에, 전자 데이터 파일의 관리는 중요한 요소로 자리잡게 되었습니다.<br />
			더구나, PC 중심의 작업 환경은 각자 필요한 문서 파일을 생성 및 보관을 하게 되었고, 타인이 요청하는 문서 파일은 메일 또는 공유 폴더를 이용하여 주고 받게 되기 때문에 보안을 비롯하여 문서 이력 관리 등의 문제가 심각하게 발생할 수 밖에 없습니다.<br />
			<br />
			이에 대한 해결책은 공동 관리되는 중앙 서버에 파일을 보관하고 사용을 제어하며 파일의 갱신에 대한 추적을 하고 사용에 대한 기록 및 분실을 방지하는 것입니다.<br /> 
			이것은 단순히 공유 폴더의 개념으로는 불가능하며, 데이터 관리 시스템과 자료 기록 시스템이 결합된 새로운 형태의 자료 관리 시스템이 필요하게 됩니다.<br />
			<br />
			현재 각 업계에서는 다양한 상용 또는 공개된 형상 관리 소프트웨어를 사용하고 있습니다. 대개의 이런 형상 관리 도구는 소프트웨어 개발 도구로서 개발된 것입니다.<br /> 
			자료 파일의 크기가 작은 경우나 개발 도구와의 결합에 의한 활용성은 높지만 일반 문서 파일 또는 크기가 큰 파일에 대해서는 안정적으로 지원하고 있지 않습니다.
			</p>
			
			<h3 id="assetmanagement">업계의 File 보관 방안</h3>
			
			<h4>작업한 데이터 파일의 보관 용량에 대한 문제</h4>
			<p>
			개인 PC에 많은 수의 파일과 자료가 보관되므로 점점 더 큰 용량의 하드 디스크가 필요합니다.<br/>
			여유가 있다면 한 개의 컴퓨터에 보관할 수도 있지만 여유가 없다면 다른 컴퓨터에 데이터를 보관해야 할 수도 있습니다.
			</p>
			<h4>파일 버전 관리와 중복 사용에 관한 문제</h4>
			<p>
			동일한 파일로 계속적인 작업을 진행할 경우에는 새로운 작업으로 파일을 변경하면 이전에 보관했던 작업이 사라지는 문제가 있습니다. 이를 보완하기 위해 대개 날짜와 작업 순번과 같은 것으로 이름을 적절히 변경시켜 백업하여 보관하고 있습니다.<br/>
			이러한 파일 관리는 사용자의 실수에 의한 데이터 소실이 생길 가능성이 높으며, 변경이 일어난 횟수에 비례하여 파일의 개수가 늘어나게 되어 정작 필요할 때 어떤 파일이 필요한 파일인지 찾을 수 없게 되는 문제를 야기합니다.<br/>
			또한 작업 중 공간이 부족하게 되면 다른 디스크로 데이터 파일이 분산되게 되어, 결국 작업 파일을 찾는데 많은 리소스를 소모하게 됩니다.<br/>
			단일 파일에 대해 여러 사람이 작업을 하는 경우, 파일을 복사하여 변경하게 되면 동시에 같은 파일을 수정할 수도 있습니다. 이 경우 작업 중 하나만을 제외한 다른 작업은 모두 잃을 수 있으며, 또한 누가 편집한 자료인지 알 수 없기 때문에 문제가 발생한 경우 책임 공방도 일어나게 됩니다.
			</p>
			<h4>io:Box의 잠금 공유</h4>
			<p>
			io:Box는 파일을 공유할 때 잠금 방식을 사용합니다. 이렇게 함으로써 하나의 파일을 항상 한 사람만 편집한다는 점을 확고히 할 수 있으며, 누가 최종적으로 작업했는지도 기록하게 됩니다.
			</p>
		</div>
	
	
	</div>	
	<div class="row">
	<h1>자료 관리 (Data Warehousing)</h1>
	
		<div class="row">
		<h2>작업한 데이터 파일의 보관 용량에 대한 문제</h2>
	
		개인 PC에 많은 수의 파일과 자료가 보관되므로 점점 더 큰 용량의 하드 디스크가 필요합니다.
		여유가 있다면 한 개의 컴퓨터에 보관할 수도 있지만 여유가 없다면 다른 컴퓨터에 데이터를 보관해야 할 수도 있습니다.
		</div>
		
		<div class="row">
		<h2>파일 버전 관리와 중복 사용에 관한 문제</h2>
		
		동일한 파일로 계속적인 작업을 진행할 경우에는 새로운 작업으로 파일을 변경하면 이전에 보관했던 작업이 사라지는 문제가 있습니다. 이를 보완하기 위해 대개 날짜와 작업 순번과 같은 것으로 이름을 적절히 변경시켜 백업하여 보관하고 있습니다.
		이러한 파일 관리는 사용자의 실수에 의한 데이터 소실이 생길 가능성이 높으며, 변경이 일어난 횟수에 비례하여 파일의 개수가 늘어나게 되어 정작 필요할 때 어떤 파일이 필요한 파일인지 찾을 수 없게 되는 문제를 야기합니다.
		또한 작업 중 공간이 부족하게 되면 다른 디스크로 데이터 파일이 분산되게 되어, 결국 작업 파일을 찾는데 많은 리소스를 소모하게 됩니다.
		단일 파일에 대해 여러 사람이 작업을 하는 경우, 파일을 복사하여 변경하게 되면 동시에 같은 파일을 수정할 수도 있습니다. 이 경우 작업 중 하나만을 제외한 다른 작업은 모두 잃을 수 있으며, 또한 누가 편집한 자료인지 알 수 없기 때문에 문제가 발생한 경우 책임 공방도 일어나게 됩니다.
		</div>
	</div>
	
	<div class="row">
	<h1>io:Box User Application tour</h1>
	
		<div class="row">
		<h2>Login</h2>
		
		프로그램을 처음 실행하면 최신 업데이트를 확인한 후에 로그인 화면이 나타납니다. 로그인 화면에서는 사용 중인 서버를 선택할 수 있으며, 선택한 후에 아이디와 암호를 이용하여 접속할 수 있습니다.
		
		[tour2]
		
		접속 방법은 서버가 사내에 있는 경우에 사용하는 내부 접속과 공인 인터넷 주소를 가진 경우 외부 접속으로 나뉩니다. 내부의 기가비트 이더넷과 같은 빠른 속도를 활용하기 위해 두 가지 모드를 지원합니다.
		
		만약 서버가 사내에 존재하고 내부 IP 를 이용하는 경우, 사외에서는 어떤 방법으로도 접속을 할 수 없으며 서버가 사외에 존재하며 공인 IP를 쓰는 경우에는 내부 접속과 외부 접속의 차이는 없습니다. 
		
		기본적으로 1개의 서버를 이용하여 접속하지만, 경우에 따라서 서버가 여러 개일 수 있습니다. 이를 위하여 사용자가 서버를 등록하거나 삭제할 수 있게 되어 있습니다.
		</div>
	
		<div class="row">
			<div class="row">
			<h3>Main</h3>
				<div class="row">
				<h4>프로젝트 선택</h4>
				
				처음 접속하면 프로젝트 선택화면이 나타납니다. 현재 접속이 허용된 프로젝트 목록이 상단에 나타나며, 진행 중인 작업 목록이 하단에 나타납니다. 목록은 갱신할 수 있는데, 수동으로 작동합니다.
				
				[tour3]
				
				프로젝트의 이미지는 프로젝트 관리자가 설정할 수 있습니다.
				</div>
				<div class="row">
				<h4>진행 중인 작업 목록</h4>
				
				현재 사용자가 작업 중으로, 체크아웃한 파일의 목록이 나타납니다. 여기서 파일을 편집할 수 있고, 작업을 완료할 수 있습니다. 대상 파일에서 마우스 오른쪽 버튼을 누르면 수행할 수 있는 작업이 팝업 메뉴로 나타납니다.
				
				[tour4]
				</div>
				<div class="row">
				<h4>메시지 관리</h4>
				
				현재 사용자가 보내거나 받은 메시지를 관리합니다. 우측에 받은 메시지와 보낸 메시지가 나타납니다. 갱신은 수동으로 합니다.
				
				[tour5]
				</div>
			</div>
			<div class="row">
			<h3>프로젝트</h3>
			
			프로젝트를 선택하였을 때 그 프로젝트에 탐색 권한이 있다면 좌측에 프로젝트 트리 구조와 우측에 포함된 폴더와 파일의 구조를 가진 화면이 나타납니다.
	
			[tour6]
	
			탐색 권한이 없으면 프로젝트 내용이 나타나지 않습니다.
	
			작업은 해당 항목에서 팝업 메뉴를 불러서 사용합니다. 각 작업은 폴더와 파일, 파일의 상태에 따라서 각기 다르게 나타납니다.
	
				<div class="row">
				<h4>드래그 앤 드랍 지원</h4>
		
				Io:Box Client 프로그램은 드래그 앤 드랍을 지원합니다. 프로젝트에 새 파일이나 폴더를 추가할 때도 사용할 수 있으며, 사본을 가져올 때도 이용할 수 있습니다. 폴더 간의 이동이나 파일의 이동에도 사용할 수 있으므로, 적절한 드래그 앤 드랍 사용은 프로그램 사용을 편하게 해 줄 것입니다.
				</div>
				<div class="row">
				<h4>파일 전송</h4>
				
				모든 파일의 전송은 파일 전송 관리자가 담당합니다. 파일을 사용하기 위하여 서버에서 가져오는 작업 (체크-아웃), 파일 사용은 완료하여 변경된 파일을 등록하는 작업(체크-인), 파일의 복사본을 가져오는 작업, 새로운 파일을 등록하는 작업은 각기 상황에 따라 구분되며, 이렇게 구분된 작업에 따라 파일을 보내거나 받고, 그 기록을 표시합니다.
		
				[tour7]
		
				이 파일 전송 관리자는 하위 폴더를 모두 처리할 수 있으며, 전송 중간에 취소도 가능합니다. 내부 네트워크인 경우 빠른 속도로 파일을 주고 받습니다.
		
					<div class="row">
					<h5>파일의 체크-아웃, 체크-인, 사본 작업</h5>
					파일을 수정하기 위해서는 반드시 체크 아웃이라는 작업을 거쳐야 합니다. 체크 아웃은 단순히 최신의 파일만 가져오는 것이 아니라 파일을 누가 현재 사용 중이라는 정보도 함께 기록합니다. 이렇게 함으로써 시스템에서 파일이 이중으로 사용되는 것을 막으며, 파일의 최종 사용자가 누구인지도 알려 주게 됩니다.
					
					파일의 사용이 모두 끝났으면, 파일을 체크인하여 서버에 등록할 수 있습니다. 이러한 체크인 작업을 하면 서버로 최종 작업 파일을 등록할 뿐 아니라, 현재 파일의 사용자가 없으므로 다른 사용자가 파일을 사용할 수 있도록 허용하는 역할도 합니다.
					
					파일이 이미 사용 중이거나, 또는 보관된 파일의 안전성을 최대한 보장하고 싶다면 파일의 사본만을 가져다 사용할 수 있습니다. 이렇게 사본으로 파일을 가져오면 파일의 형상 관리에는 전혀 영향을 주지 않으며, 파일을 열람하거나 다른 작업에 적용할 수 있습니다.
					
					[tour8]
					</div>
				</div>
				<div class="row">
				<h4>사본 만들기 도구</h4>
				
				스케줄링 시스템을 이용한 사본 만들기 도구를 제공합니다.
				
				[tour9]
				
				시간을 설정하고 추가 옵션을 지정한 뒤 시작하면 타이머가 작동합니다.
				
				이 기능은 많은 양의 작업 파일을 서버에서 가져올 때 유용합니다. 장시간이 걸리므로, 타이머를 심야로 설정하고 컴퓨터를 켜 두면 자동으로 최신 파일을 모두 가져오게 됩니다.
				
				주의할 점은, 컴퓨터가 슬립 모드에 들어가지 않도록 하여 주십시오.
				
				버전 번호를 붙여 받으면 다음과 같은 형식이 됩니다.
				
				원래 : 파일명.확장자
				버전 번호 포함 : 파일명.버전번호.확장자
				
				예를 들어
					원래 : name.txt
					버전 번호 포함 : name.1.txt
				
				따라서, 필요한 경우에만 사용하십시오. 폴더를 별도로 지정할 수 없으며, 별도로 지정하고자 하면 프로젝트 개인 속성에서 경로를 변경해 두시면 됩니다.
				</div>
			</div>
		</div>
	</div>
	
	<div class="row">
	<h1>io:Box File Server</h1>
	
	현재 대다수의 형상 관리 소프트웨어는 로컬 네트워크 상의 파일만 다루므로 데이터의 보관도 NetBIOS를 이용한 고속 파일 보관을 사용합니다. 그러나, 파일의 보관이 불안정적이며 관리가 어렵고, 데이터를 분산시킬 수 없으며 외부에서의 접근이 실질적으로 불가능하다는 점에서 확장 성이 떨어집니다.
	
	Io:Box 에서는 File Server를 이용하여 데이터 보관 작업을 전담시킵니다. 파일의 이어 받기와 이어 올리기가 지원되며, Client 에서의 설정에 따라 여러 저장 서버를 한 개의 프로젝트에서 사용할 수 있으므로 데이터 보관의 용량 문제가 해결됩니다.
	</div>
	
	<div class="row">
	<h1>Technical for io:Box</h1>
	
		<div class="row">
		<h2>RDBMS (Relational Database Management System)</h2>
	
		현재 SQL Server를 기반으로 개발하였으며, 사용 및 관리 데이터를 보관하고 관리합니다. SQL Server의 제작사인 Microsoft Corp.에서는 자사 데이터베이스의 확산을 위해 기능을 제한한 SQL Server Express라는 무료 데이터베이스 서버 시스템을 제공하고 있으며, io:Box에서도 이 데이터베이스 서버를 사용할 수 있기 때문에 별도의 데이터베이스 서버 구축 비용이 필요하지 않습니다.
		다만, 고성능 서버의 기능을 충분히 활용하려면 상용 SQL Server를 구입하여 사용할 필요가 있습니다. SQL Server Express는 라이선스 등록을 통해 간단히 정식 버전으로 업그레이드가 가능하므로, 사용 중이던 데이터를 손실할 우려가 없습니다.
		</div>
		
		<div class="row">
		<h2>Web Service Package</h2>
	
		현재 IIS 6.0/7.0 기반의 XML Web Service로 개발하였으며, RDBMS와 직접적인 데이터 통신을 수행하고 Client에서 요청하거나 요청 받은 데이터를 전송하는 기능을 합니다. 닷넷 프레임워크가 필요합니다.
		</div>
	</div>
</div>